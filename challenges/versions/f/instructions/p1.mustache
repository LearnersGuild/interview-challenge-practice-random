Create a function in the file `db.js` called `{{ p1.dbFuncName }}`.

The function should include a query to retrieve all {{ p1.mainTableRootName }}s in the database and their associated {{ p1.secondaryTableRootName }}. The function should take no parameters, and use the `pg-promise` database client (already instantiated). After running the query, the function should return a promise that resolves to the result of the query (an array of objects, each representing a flight. Each object should have the keys `{{ p1.mainTableMainColumnName }}` (for the {{ p1.mainTableRootName }} {{ p1.mainTableMainColumnName }}) and `{{ p1.secondaryFieldName }}` (for that {{ p1.mainTableRootName }}'s {{ p1.secondaryFieldDescription }}).

Sample result:

```
{{{ p1.sampleDbResult }}}
```

- [ ] __5:__ The function executes a SQL query using `pg-promise`
- [ ] __5:__ The function returns a promise which resolves to the result of the query.
- [ ] __5:__ The query results in one one row for each {{ p1.mainTableRootName }} in the database.
- [ ] __20:__ The result set of the SQL query includes one row for every {{ p1.mainTableRootName }} in the database, each row containing a `{{ p1.mainTableMainColumnName }}` field and a `{{ p1.secondaryFieldName }}` field.